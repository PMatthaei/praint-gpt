# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples
name: Deploy SvelteKit App to Azure App Service

on:
  push:
    branches:
      - main  # or whichever branch you want to trigger deployment
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: prain-gpt        # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repo
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: 'Set up Node.js'
        uses: actions/setup-node@v3
        with:
          node-version: '18.x' # or the version your app uses

      # Step 3: Install dependencies
      - name: 'Install dependencies'
        run: npm install

      # Step 4: Build your SvelteKit app
      - name: 'Build SvelteKit app'
        run: npm run build

      # Step 5: Archive the built app (optional but recommended)
      - name: 'Archive app'
        run: zip -r sveltekit_app.zip ./build

      # Step 6: Deploy to Azure App Service
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'         # can be 'staging' or 'production' depending on your setup
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

      # Step 7: Restart Azure Web App (Optional but recommended)
      - name: 'Restart Azure Web App'
        uses: azure/appservice-actions/webapps-restart@v1
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
